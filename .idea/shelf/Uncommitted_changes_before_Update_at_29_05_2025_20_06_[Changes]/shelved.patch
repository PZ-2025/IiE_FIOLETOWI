Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"93580640-a4f6-4848-877d-83f2d9fe0546\" name=\"Changes\" comment=\"CRUD produkty\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/ProductManagementController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/ProductManagementController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/ReportController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/ReportController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/SettingsController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/SettingsController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/TaskController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/TaskController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/UserManagementController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/UserManagementController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/UserTaskPanelController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/UserTaskPanelController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/Product_Management.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/Product_Management.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/reports.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/reports.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/settings.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/settings.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/task.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/task.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/userManagement.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/userManagement.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/usertaskpanel.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/usertaskpanel.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;KrzysztofDrozda&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/PZ-2025/IiE_FIOLETOWI.git\",\r\n    \"accountId\": \"b1f7b158-4475-45f9-92b8-f1f8ef44342c\"\r\n  }\r\n}]]></component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ujeoZrCePYtf6AiRhjnRcI7Jx1\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.TestPołączenia.executor&quot;: &quot;Run&quot;,\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\IiEFIOLETOWI\\Projekt\\src\\main\\resources\\styles\\themes\" />\r\n      <recent name=\"C:\\Users\\ABC\\Documents\\IiE_FIOLETOWI\\Projekt\\src\\main\\resources\\com\\example\" />\r\n      <recent name=\"C:\\Users\\ABC\\Documents\\IiE_FIOLETOWI\\Projekt\\src\\main\\java\\com\\example\" />\r\n      <recent name=\"C:\\Users\\ABC\\Documents\\IiE_FIOLETOWI\\Projekt\\src\\main\\java\\com\\example\\projekt\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.projekt.Main\" />\r\n      <module name=\"Projekt\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"93580640-a4f6-4848-877d-83f2d9fe0546\" name=\"Changes\" comment=\"\" />\r\n      <created>1742766587316</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1742766587316</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Pierwsze moduły\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1742767001159</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1742767001159</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Kierownik\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1747485613729</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1747485613729</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"CRUD produkty\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748283279799</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748283279799</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"CRUD produkty\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748283290823</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748283290823</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Pierwsze moduły\" />\r\n    <MESSAGE value=\"Panel użytkownika\" />\r\n    <MESSAGE value=\"Kierownik\" />\r\n    <MESSAGE value=\"CRUD produkty\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"CRUD produkty\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fb0041cdfb1eb4840b580fcf3381e0213ec16a55)
+++ b/.idea/workspace.xml	(date 1748518808958)
@@ -4,21 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="93580640-a4f6-4848-877d-83f2d9fe0546" name="Changes" comment="CRUD produkty">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+    <list default="true" id="93580640-a4f6-4848-877d-83f2d9fe0546" name="Changes" comment="Biblioteka zewnętrzna">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/ProductManagementController.java" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/ProductManagementController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Projekt/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/pom.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/ReportController.java" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/ReportController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/SettingsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/SettingsController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/TaskController.java" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/TaskController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/UserManagementController.java" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/UserManagementController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/UserTaskPanelController.java" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/java/com/example/projekt/UserTaskPanelController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/Product_Management.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/Product_Management.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/reports.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/reports.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/settings.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/settings.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/task.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/task.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/userManagement.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/userManagement.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/usertaskpanel.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/Projekt/src/main/resources/com/example/projekt/usertaskpanel.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -47,12 +36,12 @@
     &quot;assignee&quot;: &quot;KrzysztofDrozda&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/PZ-2025/IiE_FIOLETOWI.git",
-    "accountId": "b1f7b158-4475-45f9-92b8-f1f8ef44342c"
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/PZ-2025/IiE_FIOLETOWI&quot;,
+    &quot;accountId&quot;: &quot;e47df973-3faf-41d6-9f20-be590d1b6888&quot;
   }
-}]]></component>
+}</component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 0
 }</component>
@@ -64,34 +53,34 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
-    &quot;Application.TestPołączenia.executor&quot;: &quot;Run&quot;,
-    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.Main.executor": "Run",
+    "Application.TestPołączenia.executor": "Run",
+    "Downloaded.Files.Path.Enabled": "false",
+    "JUnit.PasswordValidatorTest.executor": "Run",
+    "JUnit.ReportControllerTest.executor": "Run",
+    "Repository.Attach.Annotations": "false",
+    "Repository.Attach.JavaDocs": "false",
+    "Repository.Attach.Sources": "false",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/remix/IdeaProjects/IiE_FIOLETOWI/Projekt/lib/reportlib.jar",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "MavenSettings"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
-    <key name="MoveFile.RECENT_KEYS">
-      <recent name="D:\IiEFIOLETOWI\Projekt\src\main\resources\styles\themes" />
-      <recent name="C:\Users\ABC\Documents\IiE_FIOLETOWI\Projekt\src\main\resources\com\example" />
-      <recent name="C:\Users\ABC\Documents\IiE_FIOLETOWI\Projekt\src\main\java\com\example" />
-      <recent name="C:\Users\ABC\Documents\IiE_FIOLETOWI\Projekt\src\main\java\com\example\projekt" />
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\remix\IdeaProjects\IiE_FIOLETOWI\Projekt\lib" />
     </key>
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="JUnit.ReportControllerTest">
     <configuration name="Main" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="com.example.projekt.Main" />
       <module name="Projekt" />
@@ -99,6 +88,42 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="PasswordValidatorTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="Projekt" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.example.projekt.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.example.projekt" />
+      <option name="MAIN_CLASS_NAME" value="com.example.projekt.PasswordValidatorTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="ReportControllerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="Projekt" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.example.projekt.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.example.projekt" />
+      <option name="MAIN_CLASS_NAME" value="com.example.projekt.ReportControllerTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="JUnit.ReportControllerTest" />
+        <item itemvalue="JUnit.PasswordValidatorTest" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -125,21 +150,21 @@
       <option name="project" value="LOCAL" />
       <updated>1747485613729</updated>
     </task>
-    <task id="LOCAL-00003" summary="CRUD produkty">
+    <task id="LOCAL-00003" summary="Biblioteka zewnętrzna">
       <option name="closed" value="true" />
-      <created>1748283279799</created>
+      <created>1748330500599</created>
       <option name="number" value="00003" />
       <option name="presentableId" value="LOCAL-00003" />
       <option name="project" value="LOCAL" />
-      <updated>1748283279799</updated>
+      <updated>1748330500599</updated>
     </task>
-    <task id="LOCAL-00004" summary="CRUD produkty">
+    <task id="LOCAL-00004" summary="Biblioteka zewnętrzna">
       <option name="closed" value="true" />
-      <created>1748283290823</created>
+      <created>1748330509384</created>
       <option name="number" value="00004" />
       <option name="presentableId" value="LOCAL-00004" />
       <option name="project" value="LOCAL" />
-      <updated>1748283290823</updated>
+      <updated>1748330509384</updated>
     </task>
     <option name="localTasksCounter" value="5" />
     <servers />
@@ -155,7 +180,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="main" />
+                        <option value="origin/main" />
                       </list>
                     </value>
                   </entry>
@@ -171,7 +196,7 @@
     <MESSAGE value="Pierwsze moduły" />
     <MESSAGE value="Panel użytkownika" />
     <MESSAGE value="Kierownik" />
-    <MESSAGE value="CRUD produkty" />
-    <option name="LAST_COMMIT_MESSAGE" value="CRUD produkty" />
+    <MESSAGE value="Biblioteka zewnętrzna" />
+    <option name="LAST_COMMIT_MESSAGE" value="Biblioteka zewnętrzna" />
   </component>
 </project>
\ No newline at end of file
Index: Projekt/src/main/java/com/example/projekt/ReportController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.projekt;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.*;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport com.example.reportlib.ChartUtils;\r\nimport com.example.reportlib.PDFGenerator;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.*;\r\nimport java.sql.Date;\r\nimport java.time.LocalDate;\r\nimport java.util.*;\r\n\r\npublic class ReportController {\r\n\r\n    @FXML private ComboBox<String> mainReportTypeComboBox;\r\n    @FXML private VBox filterContainer;\r\n    @FXML private VBox reportPreviewContainer;\r\n    @FXML private TableView<Map<String, String>> reportTableView;\r\n\r\n    @FXML private VBox reportRoot;\r\n\r\n    private final Map<String, Control> dynamicFilters = new HashMap<>();\r\n    private String currentReportType;\r\n    private List<Map<String, String>> lastReportData;\r\n    private Map<String, Integer> lastChartData;\r\n    private final Map<String, String> headerKeyMap = new LinkedHashMap<>();\r\n\r\n\r\n\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        reportRoot.sceneProperty().addListener((obs, oldScene, newScene) -> {\r\n            if (newScene != null) {\r\n                applyTheme(AppSettings.getTheme());\r\n                applyFontSize(AppSettings.getFontSize());\r\n            }\r\n        });\r\n\r\n        mainReportTypeComboBox.getItems().addAll(\"Transakcje\", \"Zadania\", \"Produkty\");\r\n        mainReportTypeComboBox.setOnAction(e -> {\r\n            currentReportType = mainReportTypeComboBox.getValue();\r\n            renderFilterUI(currentReportType);\r\n        });\r\n    }\r\n\r\n    private void renderFilterUI(String type) {\r\n        filterContainer.getChildren().clear();\r\n        dynamicFilters.clear();\r\n\r\n        switch (type) {\r\n            case \"Transakcje\" -> setupTransactionFilters();\r\n            case \"Zadania\" -> setupTaskFilters();\r\n            case \"Produkty\" -> setupProductFilters();\r\n        }\r\n    }\r\n\r\n    private void setupTransactionFilters() {\r\n        addDateRangePickers();\r\n        addComboBox(\"Sortuj po\", \"sortTransaction\", List.of(\"Data\", \"Produkt\", \"Ilość\"));\r\n    }\r\n\r\n    private void setupTaskFilters() {\r\n        addDateRangePickers();\r\n        addComboBox(\"Status\", \"status\", getDataFromDatabase(\"SELECT nazwa FROM statusy\"));\r\n        addComboBox(\"Priorytet\", \"priority\", getDataFromDatabase(\"SELECT nazwa FROM priorytety\"));\r\n        addComboBox(\"Sortuj po\", \"sortTask\", List.of(\"Data rozpoczęcia\", \"Priorytet\", \"Status\"));\r\n    }\r\n\r\n    private void setupProductFilters() {\r\n        addComboBox(\"Stan magazynowy\", \"stockFilter\", List.of(\"Wszystkie\", \"Tylko poniżej limitu\"));\r\n        addComboBox(\"Sortuj po\", \"sortProduct\", List.of(\"Nazwa\", \"Stan\", \"Cena\"));\r\n    }\r\n\r\n    private void addDateRangePickers() {\r\n        DatePicker start = new DatePicker();\r\n        DatePicker end = new DatePicker();\r\n        start.setPromptText(\"Data od\");\r\n        end.setPromptText(\"Data do\");\r\n        dynamicFilters.put(\"startDate\", start);\r\n        dynamicFilters.put(\"endDate\", end);\r\n        filterContainer.getChildren().add(new HBox(10, start, end));\r\n    }\r\n\r\n    private void addComboBox(String label, String key, List<String> items) {\r\n        Label lbl = new Label(label);\r\n        ComboBox<String> cb = new ComboBox<>(FXCollections.observableArrayList(items));\r\n        cb.setPrefWidth(200);\r\n        filterContainer.getChildren().add(new HBox(10, lbl, cb));\r\n        dynamicFilters.put(key, cb);\r\n    }\r\n\r\n    private List<String> getDataFromDatabase(String query) {\r\n        List<String> list = new ArrayList<>();\r\n        try (Connection conn = DatabaseConnector.connect();\r\n             Statement stmt = conn.createStatement();\r\n             ResultSet rs = stmt.executeQuery(query)) {\r\n            while (rs.next()) list.add(rs.getString(1));\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return list;\r\n    }\r\n\r\n    @FXML\r\n    public void generateReport() {\r\n        reportTableView.getColumns().clear();\r\n        reportTableView.getItems().clear();\r\n        reportPreviewContainer.getChildren().clear();\r\n\r\n        headerKeyMap.clear();\r\n\r\n\r\n        switch (currentReportType) {\r\n            case \"Transakcje\" -> generateTransactionPreview();\r\n            case \"Zadania\"     -> generateTaskPreview();\r\n            case \"Produkty\"    -> generateProductPreview();\r\n        }\r\n\r\n        reportPreviewContainer.getChildren().add(reportTableView);\r\n    }\r\n\r\n    private void generateTransactionPreview() {\r\n        String sortKey = getFilterValue(\"sortTransaction\",\"Data\");\r\n\r\n        LocalDate start = ((DatePicker) dynamicFilters.get(\"startDate\")).getValue();\r\n        LocalDate end = ((DatePicker) dynamicFilters.get(\"endDate\")).getValue();\r\n\r\n        List<Map<String, String>> data = getTransactionData(sortKey, start, end);\r\n\r\n        addColumn(\"Produkt\", \"Produkt\");\r\n        addColumn(\"Data\", \"Data\");\r\n        addColumn(\"Ilosc\", \"Ilosc\");\r\n\r\n        reportTableView.setItems(FXCollections.observableArrayList(data));\r\n        lastReportData = data;\r\n\r\n        Map<String, Integer> chartData = getTransactionChartData(start, end);\r\n        lastChartData = chartData;\r\n\r\n        ImageView chart = ChartUtils.createChartImage(chartData, \"Sprzedaż dzienna\");\r\n        reportPreviewContainer.getChildren().add(chart);\r\n    }\r\n\r\n\r\n    private List<Map<String, String>> getTransactionData(String sortKey, LocalDate start, LocalDate end) {\r\n        List<Map<String, String>> list = new ArrayList<>();\r\n        String orderBy;\r\n        switch (sortKey) {\r\n            case \"Produkt\" -> orderBy = \"p.nazwa\";\r\n            case \"Data\" -> orderBy = \"t.data_transakcji\";\r\n            case \"Ilość\" -> orderBy = \"t.ilosc\";\r\n            default -> orderBy = \"t.data_transakcji\";\r\n        }\r\n\r\n        StringBuilder query = new StringBuilder(\r\n                \"SELECT p.nazwa AS produkt, t.data_transakcji AS data, t.ilosc AS ilosc \" +\r\n                        \"FROM transakcje t \" +\r\n                        \"JOIN produkty p ON t.id_produktu = p.id_produktu \" +\r\n                        \"WHERE 1=1 \"\r\n        );\r\n\r\n        if (start != null) query.append(\"AND t.data_transakcji >= ? \");\r\n        if (end != null) query.append(\"AND t.data_transakcji <= ? \");\r\n\r\n        query.append(\"ORDER BY \").append(orderBy);\r\n\r\n        try (Connection conn = DatabaseConnector.connect();\r\n             PreparedStatement stmt = conn.prepareStatement(query.toString())) {\r\n\r\n            int index = 1;\r\n            if (start != null) stmt.setDate(index++, Date.valueOf(start));\r\n            if (end != null) stmt.setDate(index++, Date.valueOf(end));\r\n\r\n            ResultSet rs = stmt.executeQuery();\r\n            while (rs.next()) {\r\n                Map<String, String> row = new HashMap<>();\r\n                row.put(\"Produkt\", rs.getString(\"produkt\"));\r\n                row.put(\"Data\", rs.getString(\"data\"));\r\n                row.put(\"Ilosc\", rs.getString(\"ilosc\"));\r\n                list.add(row);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n\r\n\r\n    private Map<String, Integer> getTransactionChartData(LocalDate start, LocalDate end) {\r\n        Map<String, Integer> data = new LinkedHashMap<>();\r\n        StringBuilder query = new StringBuilder(\r\n                \"SELECT t.data_transakcji, SUM(t.ilosc) AS total FROM transakcje t WHERE 1=1 \"\r\n        );\r\n\r\n        if (start != null) query.append(\"AND t.data_transakcji >= ? \");\r\n        if (end != null) query.append(\"AND t.data_transakcji <= ? \");\r\n\r\n        query.append(\"GROUP BY t.data_transakcji ORDER BY t.data_transakcji\");\r\n\r\n        try (Connection conn = DatabaseConnector.connect();\r\n             PreparedStatement stmt = conn.prepareStatement(query.toString())) {\r\n\r\n            int index = 1;\r\n            if (start != null) stmt.setDate(index++, Date.valueOf(start));\r\n            if (end != null) stmt.setDate(index++, Date.valueOf(end));\r\n\r\n            ResultSet rs = stmt.executeQuery();\r\n            while (rs.next()) {\r\n                data.put(rs.getString(\"data_transakcji\"), rs.getInt(\"total\"));\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n\r\n    private void generateTaskPreview() {\r\n        String sortKey = Optional.ofNullable(getFilterValue(\"sortTask\", \"Data rozpoczęcia\")).orElse(\"Data rozpoczęcia\");\r\n        String statusFilter = getFilterValue(\"status\", null);\r\n        String priorityFilter = getFilterValue(\"priority\", null);\r\n\r\n        LocalDate start = ((DatePicker) dynamicFilters.get(\"startDate\")).getValue();\r\n        LocalDate end = ((DatePicker) dynamicFilters.get(\"endDate\")).getValue();\r\n\r\n        System.out.println(\"Filtracja zadań: sortKey=\" + sortKey + \", status=\" + statusFilter + \", priority=\" + priorityFilter);\r\n        System.out.println(\"Zakres dat: start=\" + start + \", end=\" + end);\r\n\r\n        List<Map<String, String>> data = getTaskData(sortKey, statusFilter, priorityFilter, start, end);\r\n\r\n        // Logowanie pobranych danych\r\n        System.out.println(\"Dane zadań: \" + data);\r\n\r\n        addColumn(\"Zadanie\", \"task\");\r\n        addColumn(\"Status\", \"status\");\r\n        addColumn(\"Priorytet\", \"priority\");\r\n        addColumn(\"Data rozpoczęcia\", \"start\");\r\n\r\n        reportTableView.setItems(FXCollections.observableArrayList(data));\r\n        lastReportData = data;\r\n\r\n\r\n        Map<String, Integer> chartData = getTaskChartData(statusFilter, priorityFilter, start, end);\r\n        lastChartData = chartData;\r\n\r\n        ImageView chart = ChartUtils.createChartImage(chartData, \"Liczba zadań wg statusu\");\r\n        reportPreviewContainer.getChildren().add(chart);\r\n    }\r\n\r\n\r\n\r\n\r\n    private List<Map<String, String>> getTaskData(String sortKey, String statusFilter, String priorityFilter, LocalDate start, LocalDate end) {\r\n        List<Map<String, String>> list = new ArrayList<>();\r\n        StringBuilder query = new StringBuilder(\r\n                \"SELECT z.nazwa, s.nazwa AS status, p.nazwa AS priority, z.data_rozpoczecia \" +\r\n                        \"FROM zadania z \" +\r\n                        \"JOIN statusy s ON z.id_statusu = s.id_statusu \" +\r\n                        \"JOIN priorytety p ON z.id_priorytetu = p.id_priorytetu WHERE 1=1 \"\r\n        );\r\n\r\n        if (start != null) query.append(\"AND z.data_rozpoczecia >= ? \");\r\n        if (end != null) query.append(\"AND z.data_rozpoczecia <= ? \");\r\n        if (statusFilter != null) query.append(\"AND s.nazwa = ? \");\r\n        if (priorityFilter != null) query.append(\"AND p.nazwa = ? \");\r\n\r\n        query.append(\"ORDER BY \");\r\n        query.append(switch (sortKey) {\r\n            case \"Priorytet\" -> \"p.nazwa\";\r\n            case \"Status\" -> \"s.nazwa\";\r\n            default -> \"z.data_rozpoczecia\";\r\n        });\r\n\r\n        System.out.println(\"Zapytanie SQL: \" + query); // Logowanie zapytania SQL\r\n\r\n        try (Connection conn = DatabaseConnector.connect();\r\n             PreparedStatement stmt = conn.prepareStatement(query.toString())) {\r\n\r\n            int index = 1;\r\n            if (start != null) stmt.setDate(index++, Date.valueOf(start));\r\n            if (end != null) stmt.setDate(index++, Date.valueOf(end));\r\n            if (statusFilter != null) stmt.setString(index++, statusFilter);\r\n            if (priorityFilter != null) stmt.setString(index++, priorityFilter);\r\n\r\n            ResultSet rs = stmt.executeQuery();\r\n            while (rs.next()) {\r\n                Map<String, String> row = new HashMap<>();\r\n                row.put(\"task\", rs.getString(\"nazwa\"));\r\n                row.put(\"status\", rs.getString(\"status\"));\r\n                row.put(\"priority\", rs.getString(\"priority\"));\r\n                row.put(\"start\", rs.getString(\"data_rozpoczecia\"));\r\n                list.add(row);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        // Logowanie danych\r\n        System.out.println(\"Dane zadań po zapytaniu: \" + list);\r\n        return list;\r\n    }\r\n\r\n\r\n\r\n    private Map<String, Integer> getTaskChartData(String statusFilter, String priorityFilter, LocalDate start, LocalDate end) {\r\n        Map<String, Integer> data = new LinkedHashMap<>();\r\n        StringBuilder query = new StringBuilder(\r\n                \"SELECT s.nazwa AS status, COUNT(*) AS total \" +\r\n                        \"FROM zadania z \" +\r\n                        \"JOIN statusy s ON z.id_statusu = s.id_statusu \" +\r\n                        \"JOIN priorytety p ON z.id_priorytetu = p.id_priorytetu WHERE 1=1 \"\r\n        );\r\n\r\n        if (statusFilter != null) query.append(\"AND s.nazwa = ? \");\r\n        if (priorityFilter != null) query.append(\"AND p.nazwa = ? \");\r\n        if (start != null) query.append(\"AND z.data_rozpoczecia >= ? \");\r\n        if (end != null) query.append(\"AND z.data_rozpoczecia <= ? \");\r\n\r\n        query.append(\"GROUP BY s.nazwa\");\r\n\r\n        try (Connection conn = DatabaseConnector.connect();\r\n             PreparedStatement stmt = conn.prepareStatement(query.toString())) {\r\n\r\n            int index = 1;\r\n            if (statusFilter != null) stmt.setString(index++, statusFilter);\r\n            if (priorityFilter != null) stmt.setString(index++, priorityFilter);\r\n            if (start != null) stmt.setDate(index++, Date.valueOf(start));\r\n            if (end != null) stmt.setDate(index++, Date.valueOf(end));\r\n\r\n            ResultSet rs = stmt.executeQuery();\r\n            while (rs.next()) {\r\n                data.put(rs.getString(\"status\"), rs.getInt(\"total\"));\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return data;\r\n    }\r\n\r\n    private void generateProductPreview() {\r\n        String sortKey = getFilterValue(\"sortProduct\", \"Nazwa\");\r\n        List<Map<String, String>> data = getProductData(sortKey);\r\n\r\n        addColumn(\"Produkt\", \"product\");\r\n        addColumn(\"Stan magazynowy\", \"stock\");\r\n        addColumn(\"Cena\", \"price\");\r\n\r\n        reportTableView.setItems(FXCollections.observableArrayList(data));\r\n        lastReportData = data;\r\n\r\n        Map<String, Integer> chartData = getProductChartData();\r\n        lastChartData = chartData;\r\n        ImageView chart = ChartUtils.createChartImage(chartData, \"Stan magazynowy produktów\");\r\n        reportPreviewContainer.getChildren().add(chart);\r\n\r\n    }\r\n\r\n    private List<Map<String, String>> getProductData(String sortKey) {\r\n        List<Map<String, String>> list = new ArrayList<>();\r\n\r\n        String orderBy = switch (sortKey) {\r\n            case \"Stan\" -> \"stan\";\r\n            case \"Cena\" -> \"cena\";\r\n            default -> \"nazwa\";\r\n        };\r\n\r\n        String query = \"SELECT nazwa, stan, cena FROM produkty ORDER BY \" + orderBy;\r\n\r\n        try (Connection conn = DatabaseConnector.connect();\r\n             Statement stmt = conn.createStatement();\r\n             ResultSet rs = stmt.executeQuery(query)) {\r\n            while (rs.next()) {\r\n                Map<String, String> row = new HashMap<>();\r\n                row.put(\"product\", rs.getString(\"nazwa\"));\r\n                row.put(\"stock\", rs.getString(\"stan\"));\r\n                row.put(\"price\", rs.getString(\"cena\"));\r\n                list.add(row);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return list;\r\n    }\r\n\r\n    private Map<String, Integer> getProductChartData() {\r\n        Map<String, Integer> data = new LinkedHashMap<>();\r\n        String query = \"SELECT nazwa, SUM(stan) AS total FROM produkty GROUP BY nazwa\";\r\n\r\n        try (Connection conn = DatabaseConnector.connect();\r\n             Statement stmt = conn.createStatement();\r\n             ResultSet rs = stmt.executeQuery(query)) {\r\n            while (rs.next()) {\r\n                data.put(rs.getString(\"nazwa\"), rs.getInt(\"total\"));\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    private String getFilterValue(String key, String defaultValue) {\r\n        return Optional.ofNullable(dynamicFilters.get(key))\r\n                .filter(c -> c instanceof ComboBox<?>)\r\n                .map(c -> ((ComboBox<String>) c).getValue())\r\n                .orElse(defaultValue);\r\n    }\r\n\r\n    private void addColumn(String header, String key) {\r\n        TableColumn<Map<String, String>, String> col = new TableColumn<>(header);\r\n        col.setCellValueFactory(data -> new javafx.beans.property.SimpleStringProperty(data.getValue().get(key)));\r\n        reportTableView.getColumns().add(col);\r\n        headerKeyMap.put(header, key); // zapamiętujemy mapowanie nagłówek → klucz mapy\r\n    }\r\n\r\n\r\n    @FXML\r\n    public void saveReportAsPDF() {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter(\"PDF\", \"*.pdf\"));\r\n        File file = fileChooser.showSaveDialog(new Stage());\r\n\r\n        if (file != null) {\r\n            try {\r\n                List<Map<String, String>> data = lastReportData;\r\n                Map<String, Integer> chartData = lastChartData;\r\n\r\n                // Tablica nagłówków\r\n                String[] headers = headerKeyMap.keySet().toArray(new String[0]);\r\n                // Tablica kluczy (do odczytu wartości z map danych)\r\n                String[] keys = headerKeyMap.values().toArray(new String[0]);\r\n\r\n                PDFGenerator.generateReport(currentReportType, data, headers, keys, file, chartData);\r\n                showAlert(\"Zapisano raport do pliku: \" + file.getName());\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n                showAlert(\"Błąd zapisu PDF.\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private void showAlert(String message) {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n        alert.setTitle(\"Informacja\");\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(message);\r\n        alert.showAndWait();\r\n    }\r\n\r\n\r\n    @FXML\r\n    private void goBackToDashboard() {\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/com/example/projekt/dashboard.fxml\"));\r\n            Parent root = loader.load();\r\n\r\n            // Pobranie aktualnej sceny\r\n            Stage stage = (Stage) mainReportTypeComboBox.getScene().getWindow();\r\n            stage.setScene(new Scene(root));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    private void applyTheme(String theme) {\r\n        Scene scene = reportRoot.getScene();\r\n        if (scene == null) return;\r\n\r\n        scene.getStylesheets().clear();\r\n        String cssFile = switch (theme) {\r\n            case \"Jasny\" -> \"/styles/themes/light.css\";\r\n            case \"Ciemny\" -> \"/styles/themes/dark.css\";\r\n            default -> \"/styles/themes/default.css\";\r\n        };\r\n\r\n        URL cssUrl = getClass().getResource(cssFile);\r\n        if (cssUrl != null) {\r\n            scene.getStylesheets().add(cssUrl.toExternalForm());\r\n        }\r\n    }\r\n\r\n    private void applyFontSize(double size) {\r\n        reportRoot.getScene().getRoot().setStyle(\"-fx-font-size: \" + (int) size + \"px;\");\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Projekt/src/main/java/com/example/projekt/ReportController.java b/Projekt/src/main/java/com/example/projekt/ReportController.java
--- a/Projekt/src/main/java/com/example/projekt/ReportController.java	(revision fb0041cdfb1eb4840b580fcf3381e0213ec16a55)
+++ b/Projekt/src/main/java/com/example/projekt/ReportController.java	(date 1748522298421)
@@ -41,6 +41,7 @@
 
 
 
+
     @FXML
     public void initialize() {
         reportRoot.sceneProperty().addListener((obs, oldScene, newScene) -> {
@@ -156,7 +157,7 @@
     }
 
 
-    private List<Map<String, String>> getTransactionData(String sortKey, LocalDate start, LocalDate end) {
+    public List<Map<String, String>> getTransactionData(String sortKey, LocalDate start, LocalDate end) {
         List<Map<String, String>> list = new ArrayList<>();
         String orderBy;
         switch (sortKey) {
@@ -202,7 +203,7 @@
 
 
 
-    private Map<String, Integer> getTransactionChartData(LocalDate start, LocalDate end) {
+    public Map<String, Integer> getTransactionChartData(LocalDate start, LocalDate end) {
         Map<String, Integer> data = new LinkedHashMap<>();
         StringBuilder query = new StringBuilder(
                 "SELECT t.data_transakcji, SUM(t.ilosc) AS total FROM transakcje t WHERE 1=1 "
@@ -267,7 +268,7 @@
 
 
 
-    private List<Map<String, String>> getTaskData(String sortKey, String statusFilter, String priorityFilter, LocalDate start, LocalDate end) {
+    public List<Map<String, String>> getTaskData(String sortKey, String statusFilter, String priorityFilter, LocalDate start, LocalDate end) {
         List<Map<String, String>> list = new ArrayList<>();
         StringBuilder query = new StringBuilder(
                 "SELECT z.nazwa, s.nazwa AS status, p.nazwa AS priority, z.data_rozpoczecia " +
@@ -319,7 +320,7 @@
 
 
 
-    private Map<String, Integer> getTaskChartData(String statusFilter, String priorityFilter, LocalDate start, LocalDate end) {
+    public Map<String, Integer> getTaskChartData(String statusFilter, String priorityFilter, LocalDate start, LocalDate end) {
         Map<String, Integer> data = new LinkedHashMap<>();
         StringBuilder query = new StringBuilder(
                 "SELECT s.nazwa AS status, COUNT(*) AS total " +
@@ -484,6 +485,8 @@
             e.printStackTrace();
         }
     }
+
+
     private void applyTheme(String theme) {
         Scene scene = reportRoot.getScene();
         if (scene == null) return;
Index: Projekt/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>com.example</groupId>\r\n    <artifactId>Projekt</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n    <name>Projekt</name>\r\n\r\n    <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <junit.version>5.10.2</junit.version>\r\n        <mockito.version>4.5.1</mockito.version>\r\n        <javafx.version>21</javafx.version>\r\n    </properties>\r\n\r\n    <repositories>\r\n        <repository>\r\n            <id>central</id>\r\n            <url>https://repo.maven.apache.org/maven2</url>\r\n        </repository>\r\n        <!-- Repozytorium iText -->\r\n        <repository>\r\n            <id>itext-repository</id>\r\n            <url>https://repo.itextsupport.com/maven2</url>\r\n        </repository>\r\n    </repositories>\r\n\r\n    <dependencies>\r\n        <!-- JavaFX -->\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-controls</artifactId>\r\n            <version>${javafx.version}</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-fxml</artifactId>\r\n            <version>${javafx.version}</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-base</artifactId>\r\n            <version>${javafx.version}</version>\r\n            <classifier>win</classifier>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-graphics</artifactId>\r\n            <version>${javafx.version}</version>\r\n            <classifier>win</classifier>\r\n        </dependency>\r\n\r\n        <!-- Baza danych -->\r\n        <dependency>\r\n            <groupId>com.mysql</groupId>\r\n            <artifactId>mysql-connector-j</artifactId>\r\n            <version>8.3.0</version>\r\n        </dependency>\r\n\r\n        <!-- JFreeChart -->\r\n        <dependency>\r\n            <groupId>org.jfree</groupId>\r\n            <artifactId>jfreechart</artifactId>\r\n            <version>1.5.3</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.jfree</groupId>\r\n            <artifactId>org.jfree.fxgraphics2d</artifactId>\r\n            <version>2.1</version>\r\n        </dependency>\r\n\r\n        <!-- iText PDF -->\r\n        <dependency>\r\n            <groupId>com.itextpdf</groupId>\r\n            <artifactId>kernel</artifactId>\r\n            <version>8.0.3</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.itextpdf</groupId>\r\n            <artifactId>layout</artifactId>\r\n            <version>8.0.3</version>\r\n        </dependency>\r\n\r\n        <!-- Logging -->\r\n        <dependency>\r\n            <groupId>ch.qos.logback</groupId>\r\n            <artifactId>logback-classic</artifactId>\r\n            <version>1.2.3</version>\r\n        </dependency>\r\n\r\n        <!-- Testowanie -->\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-api</artifactId>\r\n            <version>${junit.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-engine</artifactId>\r\n            <version>${junit.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mockito</groupId>\r\n            <artifactId>mockito-core</artifactId>\r\n            <version>${mockito.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mockito</groupId>\r\n            <artifactId>mockito-junit-jupiter</artifactId>\r\n            <version>${mockito.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.testfx</groupId>\r\n            <artifactId>testfx-junit5</artifactId>\r\n            <version>4.0.16-alpha</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.testfx</groupId>\r\n            <artifactId>testfx-core</artifactId>\r\n            <version>4.0.16-alpha</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.13.0</version>\r\n                <configuration>\r\n                    <source>21</source>\r\n                    <target>21</target>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.openjfx</groupId>\r\n                <artifactId>javafx-maven-plugin</artifactId>\r\n                <version>0.0.8</version>\r\n                <executions>\r\n                    <execution>\r\n                        <id>default-cli</id>\r\n                        <configuration>\r\n                            <mainClass>com.example.projekt/com.example.projekt.Main</mainClass>\r\n                            <launcher>app</launcher>\r\n                            <jlinkZipName>app</jlinkZipName>\r\n                            <jlinkImageName>app</jlinkImageName>\r\n                            <noManPages>true</noManPages>\r\n                            <stripDebug>true</stripDebug>\r\n                            <noHeaderFiles>true</noHeaderFiles>\r\n                        </configuration>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-surefire-plugin</artifactId>\r\n                <version>3.2.2</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Projekt/pom.xml b/Projekt/pom.xml
--- a/Projekt/pom.xml	(revision fb0041cdfb1eb4840b580fcf3381e0213ec16a55)
+++ b/Projekt/pom.xml	(date 1748519508241)
@@ -107,7 +107,7 @@
         <dependency>
             <groupId>org.mockito</groupId>
             <artifactId>mockito-core</artifactId>
-            <version>${mockito.version}</version>
+            <version>5.5.0</version>
             <scope>test</scope>
         </dependency>
         <dependency>
@@ -115,6 +115,17 @@
             <artifactId>mockito-junit-jupiter</artifactId>
             <version>${mockito.version}</version>
             <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.mockito</groupId>
+            <artifactId>mockito-inline</artifactId>
+            <version>5.2.0</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>net.bytebuddy</groupId>
+            <artifactId>byte-buddy</artifactId>
+            <version>1.14.6</version>
         </dependency>
         <dependency>
             <groupId>org.testfx</groupId>
@@ -128,6 +139,13 @@
             <version>4.0.16-alpha</version>
             <scope>test</scope>
         </dependency>
+        <dependency>
+            <groupId>com.h2database</groupId>
+            <artifactId>h2</artifactId>
+            <version>2.2.220</version>
+            <scope>test</scope>
+        </dependency>
+
     </dependencies>
 
     <build>
